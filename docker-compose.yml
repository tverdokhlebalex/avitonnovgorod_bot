services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: questbot
      POSTGRES_USER: questbot
      POSTGRES_PASSWORD: questbot
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U questbot -d questbot -h localhost || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      args:
        # Dockerfile уже содержит дефолтное зеркало pip; аргументом можно переопределить при желании
        PIP_INDEX_URL: https://mirror.yandex.ru/mirrors/pypi/simple
    working_dir: /code/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    env_file:
      - .env
    environment:
      # Явно пробрасываем строку подключения — сервисы в одной сети, используем имя контейнера db
      DATABASE_URL: postgresql+psycopg://questbot:questbot@db:5432/questbot
      DB_HOST: db
      DB_PORT: "5432"
      DB_NAME: questbot
      DB_USER: questbot
      DB_PASSWORD: questbot
      PROOFS_DIR: /code/data/proofs
      BOT_TOKEN: ${BOT_TOKEN}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      # код монтируем с хоста для быстрых обновлений через `git pull`
      - .:/code
      # фото — в отдельный том (переживёт пересборки)
      - proofs_data:/code/data/proofs
    restart: unless-stopped
    healthcheck:
      # без curl: используем встроенный python для GET /health
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://127.0.0.1:8000/health', timeout=2)",
        ]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s

  bot:
    build:
      context: .
      args:
        PIP_INDEX_URL: https://mirror.yandex.ru/mirrors/pypi/simple
    working_dir: /code
    command: python /code/bot/bot.py
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql+psycopg://questbot:questbot@db:5432/questbot
      DB_HOST: db
      DB_PORT: "5432"
      DB_NAME: questbot
      DB_USER: questbot
      DB_PASSWORD: questbot
    depends_on:
      app:
        condition: service_healthy
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/code
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://app:8000/health', timeout=2)",
        ]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 20s

volumes:
  db_data: {}
  proofs_data: {}
